2023-02-25 15:39:46 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PRODUCTS" not found; SQL statement:
INSERT INTO PRODUCTS (ID, DESCRIPTION, IMAGE_NAME, NAME, PRICE, SIZE, STOCK, CATEGORY_ID)
VALUES (1, 'It has been crafted with 100% wool for a warm and comfortable wear, providing a timeless silhouette with its tailored fit style. It features a navy and brown large check print with notch lapels, flap pockets and a sleek two-button closure.', 'Navy-brownblazer.jpeg', 'Navy and Brown Check Blazer', 149.0, 'M', 23, 1),
(2, 'Exclusive to Kingsmen, it provides a soft and comfortable finish with a textured feel and contrasting pale blue stitching. The slim fit of the blazer will ensure a modern, defined look.', 'Blue-Textured-Jersey-Blazer.jpeg', 'Slim Fit Blue Textured Jersey Blazer', 79.0, 'L', 10, 1),
(3, 'A key-piece that should be in every man''s wardrobe, it has been skillfully crafted to a tailored fit style. Featuring a grey herringbone fabric with brown and subtle blue checks, brown trims and contrasting buttons.', 'Tailored-Fit-Grey-Blazer.jpeg', 'Slim Fit Grey Textured Jersey Blazer', 129.0, 'S', 10, 1),
(4, 'Designed with luxury in mind, this premium blazer features a highly-unique pattern of brown and blue checks, notch lapels, flap pockets and a sleek two button closure.', 'Tailored-Brown-Blue-Blazer.jpeg', 'Tailored Brown and Blue Check Blazer', 165.0, 'L', 10, 1),
(5, 'Expertly cut to a tailored fit for a timeless silhouette, it features a pale grey tweed fabric with contrasting buttons, notch lapels and patch pockets.', 'tailored-fit-grey-tweed-blazer.jpeg', 'Tailored Fit Grey Tweed Blazer', 84.9, 'M', 10, 1),
(6, 'It features a plain design with notch lapels, flap pockets and contrasting lavish gold embellished buttons for an extra dash of interest.', 'clasic-fit-navy-blazer.jpeg', 'Classic Fit Navy Blazer', 140.0, 'M', 10, 1),
(7, 'Double and single-breasted, wrap style, floral, checked, colour blocks, and go-faster stripes are all waiting for you. We go above and beyond expectations when it comes to our innovative tailored offering, but we also do all the classics to perfection.', 'Black-Blazer.jpeg.webp', 'Regular Fit Blazer', 99.9, 'S', 10, 1),
(8, 'Don''t be afraid to stand out, let your outfit do the talking with this cream, tailored fit blazer. A unique and well-finished blazer with a flattering fit.', 'cream-dinner-jacket.jpeg', 'Cream Tailored Dinner Blazer', 120.0, 'L', 10, 1),
(9, 'Slim-fit shirt in premium cotton with a cutaway collar, French front and yoke at the back. Long sleeves with adjustable buttoning at the cuffs, and a rounded hem. Varying pattern on the inside of the cuffs and collar stand.', 'black-shirt.jpeg', 'Slim Fit Black Shirt', 19.9, 'M', 10, 2) [42102-200]
2023-02-25 15:40:43 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USERS" not found; SQL statement:
INSERT INTO users(id,email,password,firstname,lastName) VALUES
(1,'farandeadz@gmail.com','$2a$12$sN88xwg9ihH5qJuVQO8wJ./4vsyRWi9Z.f7nPQ/X05z/3smFwX6kq','Admin','faran','Birmingham') [42102-200]
2023-02-25 15:40:50 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column count does not match; SQL statement:
INSERT INTO user(id,email,password,firstname,lastName) VALUES
(1,'farandeadz@gmail.com','$2a$12$sN88xwg9ihH5qJuVQO8wJ./4vsyRWi9Z.f7nPQ/X05z/3smFwX6kq','Admin','faran','Birmingham') [21002-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.command.dml.Insert.prepare(Insert.java:319)
	at org.h2.command.Parser.prepareCommand(Parser.java:744)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1459)
	at org.h2.server.web.WebApp.query(WebApp.java:1116)
	at org.h2.server.web.WebApp.query(WebApp.java:1092)
	at org.h2.server.web.WebApp.process(WebApp.java:241)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:173)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-02-26 18:49:44 jdbc[24]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:725)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:711)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 18 more
2023-03-02 02:34:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (ORDER_ID INTEGER NOT NULL, ORDER_EMAIL VARCHAR(255), ORDER_NAME VARCHAR(255), ORDER_STATUS VARCHAR(255), ORDER_TOTAL INTEGER NOT NULL, PRIMARY KEY (ORDER_ID))"; expected "identifier"; SQL statement:
create table order (order_id integer not null, order_email varchar(255), order_name varchar(255), order_status varchar(255), order_total integer not null, primary key (order_id)) [42001-200]
2023-03-02 02:35:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (ID INTEGER NOT NULL, EMAIL VARCHAR(255), NAME VARCHAR(255), STATUS VARCHAR(255), TOTAL INTEGER NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table order (id integer not null, email varchar(255), name varchar(255), status varchar(255), total integer not null, primary key (id)) [42001-200]
2023-03-02 02:36:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (ID INTEGER NOT NULL, EMAIL VARCHAR(255), NAME VARCHAR(255), STATUS VARCHAR(255), TOTAL INTEGER NOT NULL, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table order (id integer not null, email varchar(255), name varchar(255), status varchar(255), total integer not null, primary key (id)) [42001-200]
2023-03-02 02:38:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (ID INTEGER NOT NULL, EMAIL VARCHAR(255), NAME VARCHAR(255), STATUS VARCHAR(255), TOTAL BIGINT, PRIMARY KEY (ID))"; expected "identifier"; SQL statement:
create table order (id integer not null, email varchar(255), name varchar(255), status varchar(255), total bigint, primary key (id)) [42001-200]
2023-03-02 02:42:36 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'149.0' (ORDER_DETAILS: ""TOTAL"" BIGINT)"; SQL statement:
INSERT INTO "PUBLIC"."ORDER_DETAILS"("ID","EMAIL","NAME","STATUS","TOTAL")VALUES(?,?,?,?,?) [22018-200]
2023-03-02 02:42:36 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'149.0' (ORDER_DETAILS: ""TOTAL"" BIGINT)"; SQL statement:
INSERT INTO "PUBLIC"."ORDER_DETAILS"("ID","EMAIL","NAME","STATUS","TOTAL")VALUES(?,?,?,?,?) [22018-200]
2023-03-02 02:42:50 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'asdf' (ORDER_DETAILS: ""STATUS"" INTEGER)"; SQL statement:
INSERT INTO "PUBLIC"."ORDER_DETAILS"("ID","EMAIL","NAME","STATUS","TOTAL")VALUES(?,?,?,?,?) [22018-200]
2023-03-02 02:42:50 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'asdf' (ORDER_DETAILS: ""STATUS"" INTEGER)"; SQL statement:
INSERT INTO "PUBLIC"."ORDER_DETAILS"("ID","EMAIL","NAME","STATUS","TOTAL")VALUES(?,?,?,?,?) [22018-200]
2023-03-02 02:43:06 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (ORDER_DETAILS: ""STATUS"" INTEGER)"; SQL statement:
INSERT INTO "PUBLIC"."ORDER_DETAILS"("ID","EMAIL","NAME","STATUS","TOTAL")VALUES(?,?,?,?,?) [22018-200]
2023-03-02 02:43:06 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (ORDER_DETAILS: ""STATUS"" INTEGER)"; SQL statement:
INSERT INTO "PUBLIC"."ORDER_DETAILS"("ID","EMAIL","NAME","STATUS","TOTAL")VALUES(?,?,?,?,?) [22018-200]
2023-03-02 02:43:19 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (ORDER_DETAILS: ""STATUS"" INTEGER)"; SQL statement:
INSERT INTO "PUBLIC"."ORDER_DETAILS"("ID","EMAIL","NAME","STATUS","TOTAL")VALUES(?,?,?,?,?) [22018-200]
2023-03-02 02:43:19 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (ORDER_DETAILS: ""STATUS"" INTEGER)"; SQL statement:
INSERT INTO "PUBLIC"."ORDER_DETAILS"("ID","EMAIL","NAME","STATUS","TOTAL")VALUES(?,?,?,?,?) [22018-200]
2023-03-02 02:43:36 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (ORDER_DETAILS: ""STATUS"" INTEGER)"; SQL statement:
INSERT INTO "PUBLIC"."ORDER_DETAILS"("ID","EMAIL","NAME","STATUS","TOTAL")VALUES(?,?,?,?,?) [22018-200]
2023-03-02 02:43:36 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (ORDER_DETAILS: ""STATUS"" INTEGER)"; SQL statement:
INSERT INTO "PUBLIC"."ORDER_DETAILS"("ID","EMAIL","NAME","STATUS","TOTAL")VALUES(?,?,?,?,?) [22018-200]
2023-03-10 20:55:49 jdbc[46]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:725)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:711)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 18 more
2023-03-10 21:25:05 jdbc[56]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:725)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:711)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 18 more
